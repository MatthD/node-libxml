version: 1.0-{build}
os: Visual Studio 2015
environment:
  matrix:
    - nodejs_version: "12"
      platform: x64
      npm_version: 6.9.0
      nan_version: 2.14.0
      pre_gyp_version: 0.13.0
      pre_gyp_github_version: 1.4.3
    - nodejs_version: "10.15"
      platform: x64
      npm_version: 6.4.1
      nan_version: 2.13.2
      pre_gyp_version: 0.12.0
      pre_gyp_github_version: 1.4.3
    - nodejs_version: "8.6"
      platform: x64
      npm_version: 6.4.1
      nan_version: 2.13.2
      pre_gyp_version: 0.12.0
      pre_gyp_github_version: 1.4.3
    - nodejs_version: "6.11"
      platform: x64
      npm_version: 6.4.1
      nan_version: 2.13.2
      pre_gyp_version: 0.12.0
      pre_gyp_github_version: 1.4.3
    - nodejs_version: "4.8"
      platform: x64
      npm_version: 5.5.1
      nan_version: 2.7.0
      pre_gyp_version: 0.6.39
      pre_gyp_github_version: 1.3.0
      publish_to_npm: "true"

cache:
  - '%APPDATA%\npm-cache'
install:
  - ps: Install-Product node $env:nodejs_version $env:platform
  - npm install -g npm@%npm_version%
  - set PATH=%APPDATA%\npm;%PATH%
  - npm i nan@%nan_version%
  - npm install -g node-pre-gyp@%pre_gyp_version%
  - npm install -g node-pre-gyp-github@%pre_gyp_github_version%
  - ps:  >-
        "//registry.npmjs.org/:_authToken=$env:npm_auth_token`n" | out-file "$env:userprofile\.npmrc" -Encoding ASCII

build_script:
  - node-pre-gyp configure
  - node-pre-gyp build
  - node-pre-gyp package
test: off
artifacts:
  - path: .\build\stage
for:
  -
    branches:
      only:
        - master
    on_success:
      - ps: |
            $releases = "https://api.github.com/repos/jupitex/node-libxml/releases"
            $lastRelease = (Invoke-WebRequest $releases | ConvertFrom-Json)[0].tag_name
            $curretVersion = (Get-Content package.json) -join "`n" | ConvertFrom-Json | Select -ExpandProperty "version"
            if ($env:NODE_PRE_GYP_GITHUB_TOKEN -and (-not ($lastRelease -eq $curretVersion)))
            {
                if ($env:NODE_PRE_GYP_GITHUB_TOKEN){
                    Write-Host "Releasing $curretVersion version"
                    git config --global credential.helper store
                    Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:NODE_PRE_GYP_GITHUB_TOKEN):x-oauth-basic@github.com`n"
                    git config --global user.email "matthias.dieudonne@gmail.com"
                    git config --global user.name "MatthD"
                    node-pre-gyp-github publish
                    if ($env:publish_to_npm){
                        npm publish
                    }
                }else
                {
                    Write-Host "NODE_PRE_GYP_GITHUB_TOKEN missing. Not authorised to perform release."
                }
            }else
            {
                Write-Host "Version $curretVersion already released"
            }
